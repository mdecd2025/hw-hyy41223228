var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 學員作業網站:\xa0 https://mdecd2025.github.io/hw-hyy41223228/ \n 學員作業倉儲:  https://github.com/mdecd2025/hw-hyy41223228 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n', 'tags': '', 'url': 'About.html'}, {'title': 'repo', 'text': 'from browser import html, document\n\n# 定義資料來源 URL\nurl = "https://mde.tw/list/2b.txt"\n\n# 讀取資料\ndata = open(url).readlines()\n\n# 跳過標題行，取得學員資料\nall_stud = data[1:]\n\n# 顯示學員總數\nprint("總共有 " + str(len(all_stud)) + "名學員")\n\n# 取得 HTML 中的元素 id 為 "brython_div1"\nbrython_div1 = document["brython_div1"]\n\n# 逐行處理學員資料\nfor stud in all_stud:\n    # 假設學員資料的格式為 "學號 學員賬號"\n    student_info = stud.strip().split()  # 使用 split() 將每行分為學號和帳號\n    if len(student_info) == 2:  # 確保每行有學號和帳號\n        student_id = student_info[0].strip()  # 學號\n        student_account = student_info[1].strip()  # 學員賬號\n\n        # 創建 GitHub 和作業網站的超鏈接\n        github_link = f"https://github.com/mdecd2025/hw-{student_account}"\n        homework_link = f"https://mdecd2025.github.io/hw-{student_account}/"\n        \n        # 將學號作為 GitHub repository 的鏈接\n        brython_div1 <= html.A(student_id, href=github_link)  # 學號是 GitHub repo 連結\n        brython_div1 <= " "  # 空格\n        \n        # 插入作業網站的超鏈接，標題改為 "(repo)"\n        brython_div1 <= html.A("(repo)", href=homework_link)  # 作業網站的超鏈接標題為 (repo)\n        \n        # 插入換行\n        brython_div1 <= html.BR()  # 換行 \n', 'tags': '', 'url': 'repo.html'}, {'title': 'tasks', 'text': 'task1 與 task2 任務目的在建立可於近端維護個人作業與協同作業的準備工作: \n task1 (自行製作可攜程式系統) \n task2 (使用 SSH 協定執行作業倉儲的推送) \n task3 與 task4 則為 HW2 的內容之一 \n task3 (使用 Solvespace 建立平面四連桿系統零組件) \n task4 (使用 Onshape 建立平面四連桿系統零組件) \n task5 與 task6 則為 HW3 的主要內容 \n task5 (Webots Tutorial 1 ~3) \n task6 (Webots Tutorial 4 ~6) \n', 'tags': '', 'url': 'tasks.html'}, {'title': 'wink', 'text': '', 'tags': '', 'url': 'wink.html'}, {'title': 'IPV6', 'text': '任務一運行結果 \n from browser import document, html\n\n# 學號列表（從您提供的文件複製）\nstudent_numbers = [\n    "40923137", "41023114", "41023205", "41023206", "41023210",\n    "41023213", "41023215", "41023216", "41023218", "41023232",\n    "41023237", "41071202", "41071203", "41071204", "41223201",\n    "41223202", "41223203", "41223205", "41223206", "41223207",\n    "41223208", "41223209", "41223210", "41223211", "41223212",\n    "41223214", "41223215", "41223216", "41223217", "41223218",\n    "41223219", "41223220", "41223221", "41223222", "41223223",\n    "41223224", "41223225", "41223226", "41223227", "41223228",\n    "41223229", "41223230", "41223231", "41223232", "41223233",\n    "41223234", "41223235", "41223236", "41223237", "41223239",\n    "41223240", "41223242", "41223243", "41223244", "41223245",\n    "41223246", "41223247", "41223248", "41223249", "41223250",\n    "41223251", "41223252", "41223253", "41271217", "41271236",\n    "41271237"\n]\n\n# 創建學員連結列表\ndef create_student_links():\n    div = document["brython_div1"]\n    div.clear()  # 清空既有內容\n    \n    # 基本 IPv6 位址格式\n    base_ipv6 = "2001:288:6004:17:fff1:cd25:0000:b"\n    port = "8000"\n    \n    # 使用學號生成連結\n    for i, student_id in enumerate(student_numbers, 1):  # 從 1 開始計數\n        # 格式化序號為三位數 (001-066)\n        student_num = f"{i:03d}"\n        # 完整的 IPv6 位址\n        ipv6_addr = f"{base_ipv6}{student_num}"\n        # 完整的 URL\n        url = f"http://[{ipv6_addr}]:{port}"\n        \n        # 使用學號作為顯示文字\n        link = html.A(student_id, href=url, target="_blank")\n        # 每個連結後添加換行\n        div <= link\n        div <= html.BR()\n\n# 執行函數\ncreate_student_links()\n \n \n', 'tags': '', 'url': 'IPV6.html'}, {'title': 'task1', 'text': '\n', 'tags': '', 'url': 'task1.html'}, {'title': 'list', 'text': 'g3成員 \n 查找g3成員的github頁面超鏈接和作業網站超鏈接 \n from browser import html, document, window\n\n# 定義資料來源 URL\nurl = "https://mde.tw/list/2b.txt"\n\n# 定義要查找的學號列表\ntarget_ids = ["41223226", "41223228", "41223206", "41223235", "41223227", "41223215"]\n\n# 顯示學員總數\nprint("正在處理學員資料...")\n\n# 取得 HTML 中的元素 id 為 "brython_div1"\nbrython_div1 = document["brython_div1"]\n\n# 使用 JavaScript 的 fetch API 來抓取資料\ndef process_data(response_text):\n    # 將抓取到的資料分行\n    data = response_text.splitlines()\n\n    # 跳過標題行，取得學員資料\n    all_stud = data[1:]\n\n    # 逐行處理學員資料\n    for stud in all_stud:\n        # 假設學員資料的格式為 "學號 學員賬號"\n        student_info = stud.strip().split()  # 使用 split() 將每行分為學號和帳號\n        if len(student_info) == 2:  # 確保每行有學號和帳號\n            student_id = student_info[0].strip()  # 學號\n            student_account = student_info[1].strip()  # 學員賬號\n\n            # 檢查學號是否在目標學號列表中\n            if student_id in target_ids:\n                # 創建 GitHub 和作業網站的超鏈接\n                github_link = f"https://github.com/mdecd2025/hw-{student_account}"\n                homework_link = f"https://mdecd2025.github.io/hw-{student_account}/"\n                \n                # 顯示該學號的 GitHub 和作業網站\n                brython_div1 <= html.A(student_id, href=github_link)  # 學號是 GitHub repo 連結\n                brython_div1 <= " "  # 空格\n                brython_div1 <= html.A("(repo)", href=homework_link)  # 作業網站的超鏈接標題為 (repo)\n                brython_div1 <= html.BR()  # 換行\n\n# 使用 JavaScript 的 fetch API 拉取資料\nwindow.fetch(url).then(lambda response: response.text()).then(process_data) \n 詢問gpt製作程式影片 \n from browser import html, document\n\n# 定義資料來源 URL\nurl = "https://mde.tw/list/2b.txt"\n\n# 讀取資料\ndata = open(url).readlines()\n\n# 跳過標題行，取得學員資料\nall_stud = data[1:]\n\n# 顯示學員總數\nprint("總共有 " + str(len(all_stud)) + "名學員")\n\n# 取得 HTML 中的元素 id 為 "brython_div1"\nbrython_div1 = document["brython_div1"]\n\n# 逐行處理學員資料\nfor stud in all_stud:\n    # 假設學員資料的格式為 "學號 學員賬號"\n    student_info = stud.strip().split()  # 使用 split() 將每行分為學號和帳號\n    if len(student_info) == 2:  # 確保每行有學號和帳號\n        student_id = student_info[0].strip()  # 學號\n        student_account = student_info[1].strip()  # 學員賬號\n\n        # 創建 GitHub 和作業網站的超鏈接\n        github_link = f"https://github.com/mdecd2025/hw-{student_account}"\n        homework_link = f"https://mdecd2025.github.io/hw-{student_account}/"\n        \n        # 將學號作為 GitHub repository 的鏈接\n        brython_div1 <= html.A(student_id, href=github_link)  # 學號是 GitHub repo 連結\n        brython_div1 <= " "  # 空格\n        \n        # 插入作業網站的超鏈接，標題改為 "(repo)"\n        brython_div1 <= html.A("(repo)", href=homework_link)  # 作業網站的超鏈接標題為 (repo)\n        \n        # 插入換行\n        brython_div1 <= html.BR()  # 換行 \n 查找學員github超鏈接 \n \n', 'tags': '', 'url': 'list.html'}, {'title': 'task2', 'text': '\n \n', 'tags': '', 'url': 'task2.html'}, {'title': 'w3', 'text': '列出目前尚未納入分組的學員名單. \n from browser import html, document, window\n\n# 資料來源\nurl = "https://mde.tw/list/2b.txt"\n\n# 已分組 GitHub 帳號清單\ngrouped_accounts = {\n    \'41223251\', \'41223211\', \'41223245\', \'41223243\', \'jjjay41223212\', \'leeshaowei0716\',\n    \'41223234\', \'41223209\', \'41223205\', \'41223201\', \'41223202\', \'41223208-hw\',\n    \'41223216\', \'41223217\', \'41223248\', \'emma0312\', \'41223242\', \'41223203\',\n    \'41223144\', \'41223235\', \'RAY41223215\', \'hyy41223228\', \'41223227\', \'41223206\',\n    \'41223226-0\', \'Cloud41223237\', \'Yujenchuang\', \'41223225\', \'ljg41223220\',\n    \'supowen\', \'jacky93111\', \'41223246\', \'Liu41223244\', \'41223236\', \'41223219\',\n    \'41271237\', \'41223249\', \'41223229\', \'41223224\', \'41223222\', \'41223231\',\n    \'linryan23\', \'41023114\', \'41223230\', \'timluo123\', \'CYC41223247\', \'41223218\',\n    \'ych0227\', \'41023215\', \'41023216\', \'41023213\', \'41071203\', \'41071204\',\n    \'41071202\', \'c-ching\', \'YUN4\', \'tseYU000\', \'snowfall-killer\', \'junpig10\'\n}\n\nbrython_div1 = document["brython_div1"]\n\ndef process_data(response_text):\n    data = response_text.splitlines()\n    all_stud = data[1:]\n\n    for stud in all_stud:\n        student_info = stud.strip().split()\n\n        if len(student_info) == 2:\n            student_id = student_info[0].strip()\n            student_account = student_info[1].strip()\n\n            # 帳號不在已分組名單 → 尚未分組\n            if student_account not in grouped_accounts:\n                brython_div1 <= student_id\n                brython_div1 <= html.BR()\n\n        elif len(student_info) == 1:\n            # 沒有帳號的直接列出\n            student_id = student_info[0].strip()\n            brython_div1 <= student_id\n            brython_div1 <= html.BR()\n\nwindow.fetch(url).then(lambda response: response.text()).then(process_data)\n \n \n', 'tags': '', 'url': 'w3.html'}, {'title': 'task3', 'text': '使用 Solvespace 建立平面四連桿系統零組件 \n \n 連桿 90mm中間連接件 \n \n \n \n 搖臂 60mm \n \n 曲柄 30mm \n \n 連桿機構檔案 \n', 'tags': '', 'url': 'task3.html'}, {'title': 'task4', 'text': '', 'tags': '', 'url': 'task4.html'}, {'title': 'w6', 'text': 'hw2的連桿尺寸是曲柄40mm鏈接桿60mm搖桿90mm \n 組裝影片 \n \n 使用task3的零件組裝後導出stl檔，現在要把stl檔轉成 Webots\xa0可以使用的obj檔 \n \n', 'tags': '', 'url': 'w6.html'}, {'title': 'w4', 'text': '/downloads/41223228.zip 完成的檔案 \n 建造平面四連桿的尺寸設計: 固定桿長度為 1m, 主動旋轉桿長度為 0.4m, 第二旋轉桿長度為 0.6m, 第三旋轉桿長度為 0.9m \n 1.建立robot群組 \n 2.robot下的children建立1個solid群組，2個higejoint群組，並選一個為首要，命名為joint1 \n 3.solid的children中建立shape作為固定桿(X1,Y0.1,Z0.1) \n 4. joint1下的endpoint選擇solid性質，命名為link1，並往下的children中建立pose及higejoint，pose下在建立shape為主動桿(0.4,0.1,0.1) ，shape命名為link1，再將主動桿所屬的pose的translation設為(0.2,0,0)(此為link1中心點)，而higejoint為主動桿與第二桿連接，並命名為joint2。 \n 5.joint1的endpoint下有translation(此為連接處的座標點)，設(-0.5,0,0.1) \n 6.在joint1下有boundingObject，選擇pose，往下children選擇USE link1，並調整座標至(0.2,0,0)(與link1的pose座標一致)，在設置physics \n 7.以上順序重複製作，主要為base-->joint1-->link1--> joint2-->link2--> joint3-->link3-->joint4 \n 8.joint4在robot群組中的children，與joint1同排列，並將endpoint設為solidreference，並選為use link3 \n 9.每一階的joint中各有jointparameters、device、emdpoint，其中link1上的device要加入Rotationalmotor，並命名為motor \n 10.而每一階的jointparameters，axis設為(0,0,1)(意為繞z軸旋轉)，但anchor要設為桿的長度，這樣才是joint到joint的距離，分別為(-0.5,0,0)、(0.4,0,0)、(0.6,0,0)，此座標是接續的，原點根據base的起點，另外設置的joint4則為(0.5,0,0) \n', 'tags': '', 'url': 'w4.html'}, {'title': 'task5', 'text': '', 'tags': '', 'url': 'task5.html'}, {'title': 'task6', 'text': '', 'tags': '', 'url': 'task6.html'}, {'title': 'Homework', 'text': '作業 (30%) \n HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n part1: \n 請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載  portable_wcm2025.7z  (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z  (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z  (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n part2: \n 請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景. \n base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec. \n part3: \n 模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停. \n 參考資料: \n cd2025_hw1_demo.7z \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景. \n 參考資料: \n fourbar_slvs.7z \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 ( 參考影片 )後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統. \n 參考資料: \n 參考資料: \n fourbar_ball_throwing_linkage.slvs \n sixbar_ball_throwing_linkage.slvs \n \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'HW1', 'text': 'HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n /downloads/41223228.zip \n \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': 'HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n \n \n \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號 \n \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號 \n \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Midterm', 'text': '本課程所繳交的期中成績為學員自評之學習期望成績. \n 期中考週的自評期望成績繳交流程: \n \n 整理先前所完成的各週的進度、作業網頁內容以及心得 \n 拍攝期中自評影片, 上傳至 Youtube 後, 以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號 "為影片標題後嵌入本頁面中 \n 回填期中自評表單 \n 上傳學員期中成績 \n \n 各週進度: \n W1~W3都在找出同學的github網站和倉儲，以及找出還未分組的成員。 \n W4~W8在練習 Webots的邏輯，跟做出四連桿機構。 \n 各週網頁內容: IPV6   task1 \xa0 list   W3   task3   HW1 \n \n 期中心得:這學期接觸到Webots，第一次碰到，在練習的時候發現，他很麻煩需要一定的邏輯，我也是看同學和老師的影片加上gpt，才勉強完成，如果加上接下來新的投籃機構，我覺得會需要很花很多的時間在上面。 \n 期中自評影片: \n \n \n', 'tags': '', 'url': 'Midterm.html'}, {'title': 'Exam', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam2 (10%): 利用 CAD 零組件建立模擬場景\xa0 \n 各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam3 (20%): Webots 機電模擬場景的協同設計 \n 各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站. \n 協同分組方式: \n \n 分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁. \n \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam1', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號 \n', 'tags': '', 'url': 'Exam1.html'}, {'title': 'Exam2', 'text': 'Exam2 (10%): 利用 CAD 零組件建立模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號 \n', 'tags': '', 'url': 'Exam2.html'}, {'title': 'Exam3', 'text': 'Exam3 (20%): Webots 機電模擬場景的協同設計 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號 \n', 'tags': '', 'url': 'Exam3.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};